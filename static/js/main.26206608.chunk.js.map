{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","addMovie","useState","setQuery","hadFirstSearch","setHadFirstSearch","showError","setShowError","setMovie","loading","setLoading","getMovieByTitle","titleQuery","a","response","hasOwnProperty","imdbID","newMovie","Title","Plot","Poster","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","cn","onClick","disabled","length","App","setMovies","some","state","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26206608.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=7e6de7e';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","/* eslint-disable no-prototype-builtins */\n/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport 'bulma';\n\nconst defaultImg = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [hadFirstSearch, setHadFirstSearch] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  const getMovieByTitle = async (titleQuery: string) => {\n    setLoading(true);\n    const response = await getMovie(titleQuery);\n\n    if (!response.hasOwnProperty('Error')) {\n      const imdbUrl = `https://www.imdb.com/title/${response.imdbID}`;\n\n      const newMovie = {\n        title: response.Title,\n        description: response.Plot,\n        imgUrl: response.Poster,\n        imdbUrl,\n        imdbId: response.imdbID,\n      };\n\n      if (newMovie.imgUrl === 'N/A') {\n        newMovie.imgUrl = defaultImg;\n      }\n\n      setMovie(newMovie);\n    } else {\n      setShowError(true);\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n\n          getMovieByTitle(query);\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={(event) => {\n                setQuery(event.target.value);\n                setShowError(false);\n              }}\n            />\n          </div>\n\n          {showError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn(\n                'button is-light',\n                {\n                  'is-loading': loading,\n                },\n              )}\n              onClick={() => {\n                setHadFirstSearch(true);\n              }}\n              disabled={!query.length}\n            >\n              {hadFirstSearch\n                ? 'Search again'\n                : 'Find a movie'}\n            </button>\n          </div>\n\n          {hadFirstSearch && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => {\n                  setMovie(null);\n                  setHadFirstSearch(false);\n                  setQuery('');\n                  if (movie) {\n                    addMovie(movie);\n                  }\n                }}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie) => {\n    const isListed = movies.some(movie => movie.imdbId === newMovie.imdbId);\n\n    if (!isListed) {\n      setMovies(state => ([\n        ...state,\n        newMovie,\n      ]));\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}